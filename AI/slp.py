# -*- coding: utf-8 -*-
"""slp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7DFuV5pCbAvSb8UlAQ_4xVMnn6ZiWP
"""

import numpy as np

class SLP_AN:
  def __init__(self,x,y,learning_Rate = 0.1,):
    self.learning_Rate = learning_Rate
    self.x=x
    self.y=y
    self.train()
 

  def train(self,iteration=100):
    self.iteration=iteration
     


  def predict(self,x):
    self.pd= np.where((np.dot(x, self.weights[1:]) + self.weights[0]) >= 0.0, 1, 0)
    return self.pd

  def fit(self):
    n=0
    self.weights = np.random.rand(1 + self.x.shape[1])
    self.errors=[]
    for _ in range(self.iteration):
      errors = 0
      for x_input, Target in zip(self.x, self.y):
        
        change = self.learning_Rate * (Target - self.predict(x_input))
        self.weights[1:] += change * x_input
        self.weights[0] += change *1
        #weights[0] is bias#	
        
        self.pd=self.predict(x_input)
        if Target==self.pd:
          n=n+1
        
        else:
          self.mis=Target
    self.accure=100*n/(len(self.y)*self.iteration) 
      
          
    return self	


  def Accuracy(self):
    print('the Accuracy is',self.accure)

  def Find_mis_Data(self):
    print(self.mis)

  


X_train =  np.array([[2.7810836, 2.550537003],
        [1.465489372, 2.362125076],
        [3.396561688, 4.400293529],
        [1.38807019, 1.850220317],
        [3.06407232, 3.005305973],
        [7.627531214, 2.759262235],
        [5.332441248, 2.088626775],
        [6.922596716, 1.77106367],
        [8.675418651, -0.242068655],
        [7.673756466, 3.508563011]])  
y_train =  [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]

p = SLP_AN(X_train,y_train)
# from sklearn.datasets import load_breast_cancer
# Data=load_breast_cancer()
# x=Data.data
# y=Data.target
#p = SLP_AN(x,y)
p.fit()
print(p.predict([7.7,3]))
p.Find_mis_Data()
p.Accuracy()